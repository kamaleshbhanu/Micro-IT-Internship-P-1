<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Glassmorphism Calculator</title>
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Rubik:wght@400;500;700&display=swap');

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Rubik', sans-serif;
    }

    body {
      height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
      background: linear-gradient(135deg, #74ebd5 0%, #acb6e5 100%);
      overflow: hidden;
    }

    .calculator {
      background: rgba(255, 255, 255, 0.1);
      border-radius: 30px;
      backdrop-filter: blur(15px);
      -webkit-backdrop-filter: blur(15px);
      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);
      padding: 30px;
      width: 320px;
      transition: 0.3s ease;
    }

    .display {
      background: rgba(255, 255, 255, 0.2);
      backdrop-filter: blur(10px);
      -webkit-backdrop-filter: blur(10px);
      border-radius: 20px;
      height: 80px;
      margin-bottom: 20px;
      text-align: right;
      font-size: 2.5rem;
      color: #fff;
      padding: 20px;
      overflow-x: auto;
      white-space: nowrap;
    }

    .buttons {
      display: grid;
      grid-template-columns: repeat(4, 1fr);
      gap: 15px;
    }

    button {
      height: 65px;
      font-size: 1.5rem;
      border: none;
      border-radius: 15px;
      color: white;
      background: rgba(255, 255, 255, 0.2);
      backdrop-filter: blur(8px);
      -webkit-backdrop-filter: blur(8px);
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
      cursor: pointer;
      transition: 0.2s ease;
    }

    button:hover {
      background: rgba(255, 255, 255, 0.3);
      transform: scale(1.05);
    }

    button:active {
      background: rgba(255, 255, 255, 0.4);
      transform: scale(0.95);
      box-shadow: inset 0 4px 8px rgba(0, 0, 0, 0.2);
    }

    .operator {
      background: rgba(255, 255, 255, 0.3);
      color: #ffda77;
    }

    .equal {
      background: #00c9a7;
      color: white;
      grid-column: span 2;
    }

    .clear {
      background: #ff6b6b;
      color: white;
    }

    ::-webkit-scrollbar {
      height: 6px;
    }
    ::-webkit-scrollbar-thumb {
      background: rgba(255, 255, 255, 0.4);
      border-radius: 10px;
    }
  </style>
</head>
<body>

<div class="calculator">
  <div id="display" class="display">0</div>
  <div class="buttons">
    <button class="clear" onclick="clearDisplay()">C</button>
    <button class="operator" onclick="appendOperator('/')">÷</button>
    <button class="operator" onclick="appendOperator('*')">×</button>
    <button class="operator" onclick="appendOperator('-')">−</button>

    <button onclick="appendNumber('7')">7</button>
    <button onclick="appendNumber('8')">8</button>
    <button onclick="appendNumber('9')">9</button>
    <button class="operator" onclick="appendOperator('+')">+</button>

    <button onclick="appendNumber('4')">4</button>
    <button onclick="appendNumber('5')">5</button>
    <button onclick="appendNumber('6')">6</button>
    <button onclick="appendNumber('.')">.</button>

    <button onclick="appendNumber('1')">1</button>
    <button onclick="appendNumber('2')">2</button>
    <button onclick="appendNumber('3')">3</button>
    <button class="equal" onclick="calculate()">=</button>

    <button onclick="appendNumber('0')" style="grid-column: span 2;">0</button>
  </div>
</div>

<script>
  const display = document.getElementById('display');
  let currentInput = '0';

  function updateDisplay() {
    display.textContent = currentInput;
    display.scrollLeft = display.scrollWidth;
  }

  function appendNumber(number) {
    if (currentInput === '0' && number !== '.') {
      currentInput = number;
    } else {
      currentInput += number;
    }
    updateDisplay();
  }

  function appendOperator(operator) {
    const lastChar = currentInput.slice(-1);
    if (['+', '-', '*', '/'].includes(lastChar)) {
      currentInput = currentInput.slice(0, -1) + operator;
    } else {
      currentInput += operator;
    }
    updateDisplay();
  }

  function clearDisplay() {
    currentInput = '0';
    updateDisplay();
  }

  function calculate() {
    try {
      currentInput = eval(currentInput).toString();
    } catch {
      currentInput = 'Error';
    }
    updateDisplay();
  }

  // Keyboard support
  window.addEventListener('keydown', (e) => {
    if ((e.key >= '0' && e.key <= '9') || e.key === '.') {
      appendNumber(e.key);
    } else if (['+', '-', '*', '/'].includes(e.key)) {
      appendOperator(e.key);
    } else if (e.key === 'Enter') {
      calculate();
    } else if (e.key === 'Backspace') {
      currentInput = currentInput.slice(0, -1) || '0';
      updateDisplay();
    } else if (e.key.toLowerCase() === 'c') {
      clearDisplay();
    }
  });
</script>

</body>
</html>
